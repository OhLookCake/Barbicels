[Board]
#Descriptions of how the board looks

#Number of rows and columns
numrows = 15
numcols = 15

#Special LETTER multiplier squares
#A comma-separated list of integers (numrows*numcols) entries long, specifying the multiplier for each square. 1 implies not a special square.
lettermultiplier = 1,1,1,2,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,3,1,1,1,3,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,1,1,1,3,1,1,1,3,1,1,1,3,1,1,1,2,1,1,1,2,1,2,1,1,1,2,1,1,1,1,1,2,1,1,1,1,1,1,1,2,1,1,1,1,1,2,1,1,1,2,1,2,1,1,1,2,1,1,1,3,1,1,1,3,1,1,1,3,1,1,1,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,2,1,2,1,1,1,1,1,1,1,1,1,1,1,3,1,1,1,3,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,2,1,1,1

#Special WORD multiplier squares
#A comma-separated list of integers (numrows*numcols) entries long, specifying the multiplier for each square. 1 implies not a special square.
wordmultiplier = 3,1,1,1,1,1,1,3,1,1,1,1,1,1,3,1,2,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,2,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,2,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,2,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,1,1,1,1,1,1,2,1,1,1,1,1,1,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,2,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,2,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,2,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,2,1,3,1,1,1,1,1,1,3,1,1,1,1,1,1,3

#Starting board specification. Typically, this will be a blank board.
#A comma-separated list of tiles, (numrows*numcols) entries long, specifying the tile occupying each square. '.' implies empty.
initialboard = .,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.

[Game]
#Specifications for this game
initialscore1=0
initialscore2=0
startplayer=0  ;0: decide randomly
totalseconds1 = 1500
totalseconds2 = 1500

[TilePoints]
#points associated with each tile. '?' denotes a blank tile.
A=1
B=3
C=3
D=2
E=1
F=4
G=2
H=4
I=1
J=8
K=5
L=1
M=3
N=1
O=1
P=3
Q=10
R=1
S=1
T=1
U=1
V=4
W=4
X=8
Y=4
Z=10
?=0

[TileDistribution]
#Number of tiles of each character in the distribution. '?' denotes a blank tile.
A=9
B=2
C=2
D=4
E=12
F=2
G=3
H=2
I=9
J=1
K=1
L=4
M=2
N=6
O=8
P=2
Q=1
R=6
S=4
T=6
U=4
V=2
W=2
X=1
Y=2
Z=1
?=2

[Meta]
# SPECIFY ABSOLUTE PATHS WHEN POSSIBLE

#Dictionary Used for checking
dictionaryfile = ../dictionaries/csw12.txt

#Location where gcg file is written at each move, if an agent needs to read this.
gamefile = /home/shaurya/develop/quackleCompari/ClabbersTestingEnvironment/interface/gamefile.gcg

#Location where preprocessed dictionaries are stored. This may be relevant for agents. Not directly used by the environment.
dictionarieslocation = /home/shaurya/develop/quackleCompari/ClabbersTestingEnvironment/dictionaries

[Agents]
# First Agent
#This command will be appended with the message in the specified format, and called each time the environment communicates with the agent.
Agent1Command = python ../agents/Clabbers1/clabbers1.1.py /home/shaurya/develop/quackleCompari/ClabbersTestingEnvironment/config.cfg
#Name. Used only for display purposes
Agent1Name = Clabbers1point1

# Second Agent
#This command will be appended with the message in the specified format, and called each time the environment communicates with the agent.
#Agent2Command = python ../agents/Quackle/QuackleWrapper.py
#Agent2Command = python ../agents/Greedy/greedy.py /home/shaurya/develop/quackleCompari/
Agent2Command = python ../agents/Quackle/QuackleWrapper.py /home/shaurya/develop/quackleCompari/ClabbersTestingEnvironment/config.cfg
#Name. Used only for display purposes
Agent2Name = Quackle


quacklepath = /home/shaurya/develop/quackle/test/

[Display]

#Display messages passed to agents? Can be enabled/disable independently for each agent
agent1ShowMessages = False
agent2ShowMessages = False

#Display Board after each move? Can be enabled/disable independently for each agent
agent1ShowBoardAtEveryMove = True
agent2ShowBoardAtEveryMove = True


